namespace: Fusion = TYPO3.TypoScript
namespace: YT = Jonnitto.PrettyEmbedYoutube

prototype(YT:ImageUri) < prototype(ImageUri) {
	asset = ${q(node).property('customPreviewImage')}
	maximumWidth = ${maximumWidth}
	@if.hasPicture = ${q(node).property('customPreviewImage') ? true : false}
}

prototype(YT:ImageSrc) < prototype(Fusion:Array) {
	youtubeImage = ${'//img.youtube.com/vi/' + q(node).property('videoID') + '/' + configuration.imgResultion + '.jpg'}
	youtubeImage.@if.hasNoPicture = ${q(node).property('customPreviewImage') ? false : true}
	customPreviewImage = YT:ImageUri
}

prototype(YT:ImageSrcRetina) < prototype(YT:ImageUri) {
	maximumWidth = ${maximumWidth * 2}
}

prototype(YT:YouTube) < prototype(Content) {
	@context.configuration = ${Configuration.setting('Jonnitto.PrettyEmbedYoutube')}
	@context.type = ${q(node).property('type') ? q(node).property('type') : 'video'}

	isPlaylistANDnoImage = ${type == 'playlist' && !q(node).property('customPreviewImage')}

	@context.maximumWidth = ${this.maximumWidth ? this.maximumWidth : configuration.maximumWidth}

	wrapper = ${configuration.wrapper ? configuration.wrapper : false}

	tagName = ${node.context.live ? 'a' : 'div'}
	attributes {
		class = Fusion:RawArray {
			@process.nodeType >
			nodeType = 'jonnitto-prettyembedyoutube-youtube'
			lightbox = ${q(node).property('lightbox') ? configuration.lightbox.class : configuration.embed.class}
		}
		data-fs = ${q(node).property('allowFullScreen') ? 'true' : 'false'}
		data-embed = Fusion:Array {
			src            = ${configuration.embed[type]}
			videoID        = ${q(node).property('videoID')}
			var            = ${type == 'video' ? '?' : '&'}
			autoplay       = 'autoplay=1'
			showinfo       = ${q(node).property('showInfo') ? '' : '&showinfo=0'}
			showControls   = ${q(node).property('showControls') ? '' : '&controls=0'}
			loop           = ${q(node).property('loop') ? '&loop=1' : ''}
			closedCaptions = ${q(node).property('closedCaptions') ? '&cc_load_policy=1' : ''}
			showRelated    = ${q(node).property('showRelated') ? '&rel=1' : '&rel=0'}
		}
		href = ${configuration.lightbox[type] + q(node).property('videoID')}
		target = '_blank'
	}

	content = Fusion:Tag {
		tagName = 'img'
		attributes {
			src = YT:ImageSrc
			data-src-retina = YT:ImageSrcRetina
		}
	}
}

prototype(Page) {
	head.prettyEmbedYoutube = Fusion:Tag {
		tagName = 'link'
		attributes {
			rel = 'stylesheet'
			href = Fusion:ResourceUri {
				path = 'resource://Jonnitto.PrettyEmbedYoutube/Public/Main.css'
			}
		}
		@if.hasVideoOrIsBackendAndActive = ${(q(node).children('[instanceof TYPO3.Neos:ContentCollection]').find('[instanceof Jonnitto.PrettyEmbedYoutube:YouTube]').is() || node.context.inBackend) && Configuration.setting('Jonnitto.PrettyEmbedYoutube.includeCss')}
	}
	body.javascripts.prettyEmbedYoutube = Fusion:Tag {
		tagName = 'script'
		attributes.src = Fusion:ResourceUri {
			path = 'resource://Jonnitto.PrettyEmbedYoutube/Public/Main.js'
		}
		@position = 'end'
		@if.hasVideoAndIsLiveAndActive = ${q(node).children('[instanceof TYPO3.Neos:ContentCollection]').find('[instanceof Jonnitto.PrettyEmbedYoutube:YouTube]').is() && node.context.live && Configuration.setting('Jonnitto.PrettyEmbedYoutube.includeJavascript')}
	}
}
